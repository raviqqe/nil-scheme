name: bench
on:
  push:
    branches:
      - main
  pull_request:
concurrency:
  group: bench-${{ github.ref }}
  cancel-in-progress: true
jobs:
  interpret:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-15
        options:
          -
          - -d
        exclude:
          - os: ${{ github.ref == 'refs/heads/main' && 'none' || 'macos-15' }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: tools/bench.sh ${{ matrix.options }}
  bencher:
    strategy:
      matrix:
        name:
          - fibonacci
          - tak
    permissions:
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bencherdev/bencher@main
      - uses: ./.github/actions/setup
      - run: cargo build --release
      - run: echo=PATH=$PWD/target/release:$PATH >>${{ github.env }}
      - run: stak bench/${{ matrix.name }}/main.scm
      - run: >
          bencher run
          --adapter shell_hyperfine
          --branch ${{ github.head_ref }}
          --err
          --file results.json
          --github-actions '${{ secrets.GITHUB_TOKEN }}'
          --project stak
          --testbed ubuntu-latest
          --threshold-max-sample-size 10
          --threshold-measure latency
          --threshold-test t_test
          --threshold-upper-boundary 0.99
          --thresholds-reset
          --token ${{ secrets.BENCHER_API_TOKEN }}
          "hyperfine --export-json results.json 'stak bench/${{ matrix.name }}/main.scm'"
  bench:
    needs:
      - interpret
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: for result in ${{ join(needs.*.result, ' ') }}; do [ $result = success ]; done
